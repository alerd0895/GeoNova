var navwidth = 0, navheigth = 0, cv, cx, objetos = [], objetoActual=null, objetoestaico=null;
var startX = 0, startY = 0;
function a_radianes(grados){
    return (grados * Math.PI)/180;
}
function dibujar(objs) {
    for(i=0; i<objs.length; i++){
        cx.fillStyle = objs[i].color;
        if(objs[i].type == "Rectangulo"){
            cx.fillRect(objs[i].x, objs[i].y, objs[i].width, objs[i].height);
        }else{
            if(objs[i].type == "Arc"){
                cx.beginPath();
                cx.arc(objs[i].x,objs[i].y,objs[i].radio,0,a_radianes(360),true);
                cx.fill();
                cx.closePath();
            }else{
                if(objs[i].type == "Text"){
                    cx.font = objs[i].font;
                    cx.strokeStyle = objs[i].color;
                    cx.fillText(objs[i].text, objs[i].x, objs[i].y);
                }else{
                    if(objs[i].type == "line"){
                        cx.beginPath();
                        cx.strokeStyle = objs[i].color;
                        cx.lineWidth = objs[i].grosor;
                        cx.moveTo(objs[i].x, objs[i].y);
                        cx.lineTo(objs[i].xf, objs[i].yf);
                        cx.stroke();
                        cx.strokeStyle = "red";
                        cx.beginPath();
                        cx.lineWidth = 3
                        cx.arc(objs[i].puntomediox,objs[i].puntomedioy,5,0,2*Math.PI);
                        cx.stroke();
                        cx.closePath();
                    }
                }    
            }
        }
    }
}

function menusecundario(){
    //alert("mi click secundario");
    return false;
}

function cobjetos() {
    var tamx=0, tamy=0, puntomediox=0, puntomedioy=0, separacion=0;
    tamx = (navwidth * 0.7)/10;
    tamy = navheigth/10;
    puntomediox = tamx/2;
    puntomedioy = tamy/2;
    separacion = (navwidth * 0.7 - navheigth)/2;
    objetos=[];
    //lienzo Principal
    objetos.push({
        x: 0,
        y: 0,
        width: navwidth,
        height: navheigth,
        color: '#FFF',
        type: "Rectangulo",
        tools: "False"
    });
    //Parte del geoplano
    objetos.push({
        x: 0,
        y: 0,
        width: navwidth*0.7,
        height: navheigth,
        color: '#FFF',
        type: "Rectangulo",
        tools: "False"
    });
    //Parte de opciones
    objetos.push({
        x: (navwidth*0.7)+1,
        y: 0,
        width: (navwidth*0.3)-1,
        height: navheigth,
        color: '#FFF',
        type: "Rectangulo",
        tools: "False"
    });
    //Puntos geoplano
    for(i=0;i<10;i++){
        for(j=0;j<10;j++){
            objetos.push({
                x: separacion + (tamy * j + puntomedioy),
                y: tamy * i + puntomedioy,
                color: '#A0A0A0',
                type: "Arc",
                radio: 5,
                tools: "False",
                isDrop: "True"
            });
        }
    }
    //Cuadro seleccion Vertice 103
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3) / 5) - 20,
        y: tamy - 20,
        width: ((navwidth * 0.3) / 5) - 40,
        height: 40,
        color: "#FFF",
        type: "Rectangulo",
        tools : "True",
        accion : "vertice"
    });
    //Vertice 104
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5),
        y: tamy,
        color: '#000',
        type: "Arc",
        radio: 10,
        tools: "False"
    });
    //Layenda sobre Vertice 105
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) + 30,
        y: tamy + 10,
        color: '#000',
        type: "Text",
        font: "25px Arial",
        text: "Insertar Vertice",
        tools: "False"
    });
    //Cuadro seleccion Arista 106
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3) / 5) - 20,
        y: tamy * 2 - 20,
        width: ((navwidth * 0.3) / 5) - 40,
        height: 40,
        color: "#FFF",
        type: "Rectangulo",
        tools : "True",
        accion: "arista"
    });
    //Arista 107
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) - 20,
        y: tamy * 2,
        xf: (navwidth * 0.7) + ((navwidth * 0.3)/5) + 20,
        yf: tamy * 2,
        color: "#000",
        type: "line",
        grosor: 5,
        tools: "False"
    });
    //Layenda sobre Arista 108
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) + 30,
        y: tamy * 2 + 10,
        color: '#000',
        type: "Text",
        font: "25px Arial",
        text: "Insertar Arista",
        tools: "False"
    });
    //Cuadro seleccion Etiqueta 109
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3) / 5) - 20,
        y: tamy * 3 - 20,
        width: ((navwidth * 0.3) / 5) - 40,
        height: 40,
        color: "#FFF",
        type: "Rectangulo",
        tools : "True",
        accion : "etiqueta"
    });
    //Etiqueta 110
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) - 10,
        y: tamy * 3 + 13,
        color: '#000',
        type: "Text",
        font: "35px Arial",
        text: "A",
        tools: "False"
    });
    //Layenda sobre Etiqueta 111
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) + 30,
        y: tamy * 3 +10,
        color: '#000',
        type: "Text",
        font: "25px Arial",
        text: "Insertar Etiqueta",
        tools: "False"
    });
    //Boton deshacer 112
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) -10,
        y: tamy * 7,
        width: ((navwidth * 0.3)/5)*3,
        height: tamy -15,
        color: '#AAF',
        type: "Rectangulo",
        tools: "True",
        accion: "btnDeshacer"
    });
    //Layenda boton deshacer 113
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) + 30,
        y: tamy * 7 + 32,
        color: '#000',
        type: "Text",
        font: "25px Arial",
        text: "Deshacer",
        tools: "False"
    });
    //Boton rehacer 114
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) -10,
        y: tamy * 8,
        width: ((navwidth * 0.3)/5)*3,
        height: tamy -15,
        color: '#AAF',
        type: "Rectangulo",
        tools: "True",
        accion: "btnRehacer"
    });
    //Layenda boton rehacer 115
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) + 30,
        y: tamy * 8 + 32,
        color: '#000',
        type: "Text",
        font: "25px Arial",
        text: "Rehacer",
        tools: "False"
    });
    //Boton Restablecer 116
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) -10,
        y: tamy * 9,
        width: ((navwidth * 0.3)/5)*3,
        height: tamy -15,
        color: '#AAF',
        type: "Rectangulo",
        tools: "True",
        accion: "btnRestablecer"
    });
    //Layenda boton restablecer 117
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) + 30,
        y: tamy * 9 + 32,
        color: '#000',
        type: "Text",
        font: "25px Arial",
        text: "Restablecer",
        tools: "False"
    });
    //Texto Instruccion 118
    objetos.push({
        x: 30,
        y: tamy * 10 - 10,
        color: '#000',
        type: "Text",
        font: "15px Arial",
        text: " ",
        tools: "False"
    });
    //Texto pruebas 119
    objetos.push({
        x: (navwidth * 0.7) + ((navwidth * 0.3)/5) + 30,
        y: tamy * 5 - 10,
        color: '#000',
        type: "Text",
        font: "15px Arial",
        text: " ",
        tools: "False"
    });
}
$(document).ready(function(){
    navwidth = $(window).width() - 20;
    navheigth = $(window).height() - 20;
    cv = document.getElementById('lienzo');
    cx = cv.getContext('2d');
    cx.canvas.width = navwidth;
    cx.canvas.height = navheigth;
    var etiquetas = [];
    var posEtiq = 0;
    var vtools = false, atools = false, etools = false;
    var arist = true;
    var objetosgeo = [];
    var objetosgeo2 = [];
    var objetostemp = [];
    cobjetos();
    dibujar(objetos);
    for(i=1;i<=100;i++){
        etiquetas.push('A'+i);
    }
    cv.onclick = function(event){
        if(vtools){
                //console.log(objetos);
            for(i=0; i<objetos.length; i++){
                if(objetos[i].isDrop=="True"){
                    if( objetos[i].x < event.clientX 
                        && (objetos[i].radio * 2 + objetos[i].x > event.clientX)
                        && objetos[i].y < event.clientY
                        && (objetos[i].radio * 2 + objetos[i].y > event.clientY)){
                        objetoestaico = new Object;
                        objetoestaico.color = '#000';
                        objetoestaico.x = objetos[i].x;
                        objetoestaico.y = objetos[i].y;
                        objetoestaico.type = objetos[i].type;
                        objetoestaico.radio = 10;
                        objetoestaico.tools = "False";
                        objetoestaico.geo = "V";
                        objetosgeo.push(objetoestaico);
                        dibujar(objetosgeo);
                        break;
                    }
                }
            }
        }
        if(atools){
            //console.log(objetosgeo);
            for(i=0; i<objetosgeo.length; i++){
                if(objetosgeo[i].geo == "V"){
                    if( objetosgeo[i].x < event.clientX 
                        && (objetosgeo[i].radio * 2 + objetosgeo[i].x > event.clientX)
                        && objetosgeo[i].y < event.clientY
                        && (objetosgeo[i].radio * 2 + objetosgeo[i].y > event.clientY)){
                        if(arist){
                            objetoestaico = new Object;
                            objetoestaico.color = '#000';
                            objetoestaico.type = "line";
                            objetoestaico.grosor = 5;
                            objetoestaico.tools = "False";
                            objetoestaico.geo = "A";
                            objetoestaico.x = objetosgeo[i].x;
                            objetoestaico.y = objetosgeo[i].y;
                            arist = !arist;
                        }else{
                            objetoestaico.xf = objetosgeo[i].x;
                            objetoestaico.yf = objetosgeo[i].y;
                            objetoestaico.puntomediox = objetoestaico.x + (objetoestaico.xf - objetoestaico.x)/2;
                            objetoestaico.puntomedioy = objetoestaico.y + (objetoestaico.yf - objetoestaico.y)/2;
                            objetosgeo.push(objetoestaico);
                            arist = !arist;
                        }
                        dibujar(objetosgeo);
                        break;
                    }
                }
            }
        }
        if(etools){
            //console.log(objetosgeo);
            if(event.clientX <= navwidth*0.6 +30  && event.clientX >=navwidth*0.1 - 30){
                objetoestaico = new Object;
                objetoestaico.x = event.clientX;
                objetoestaico.y = event.clientY;
                objetoestaico.color = "#000";
                objetoestaico.type = "Text";
                objetoestaico.font = "12px Arial";
                objetoestaico.text = etiquetas[posEtiq];
                posEtiq++;
                objetoestaico.tools = "False";
                objetosgeo.push(objetoestaico);
                dibujar(objetosgeo);
            }
            //console.log("fin for");
        }
        for(i=0; i<objetos.length; i++){
            if(objetos[i].tools=="True"){
                if( objetos[i].x < event.clientX 
                    && (objetos[i].width + objetos[i].x > event.clientX)
                    && objetos[i].y < event.clientY
                    && (objetos[i].height + objetos[i].y > event.clientY)){
                    if(objetos[i].accion == "vertice"){
                        vtools = !vtools;
                        atools = false;
                        etools = false;
                        if(vtools){
                            objetos[103].color = "#F0F";
                            objetos[118].text = "Seleccione un punto del geoplano, para agregar un vertice";   
                        }else{
                            objetos[103].color = "#FFF";
                            objetos[118].text = " ";   
                        }
                        objetos[106].color = "#FFF";
                        objetos[109].color = "#FFF";
                    }
                    if(objetos[i].accion == "arista"){
                        atools = !atools;
                        vtools = false;
                        etools = false;
                        if(atools){
                            objetos[106].color = "#F0F";    
                            objetos[118].text = "Seleccione dos vertices para crear un arista entre ellos";    
                        }else{
                            objetos[106].color = "#FFF";
                            objetos[118].text = " ";    
                        }
                        objetos[103].color = "#FFF";
                        objetos[109].color = "#FFF";
                    }
                    if(objetos[i].accion == "etiqueta"){
                        etools = !etools;
                        vtools = false;
                        atools = false;
                        if(etools){
                            objetos[109].color = "#F0F";
                            objetos[118].text = "Seleccione un arista para agregar una etiqueta";
                        }else{
                            objetos[109].color = "#FFF";
                            objetos[118].text = " ";
                        }
                        objetos[103].color = "#FFF";
                        objetos[106].color = "#FFF";
                    }
                    if(objetos[i].accion == "btnDeshacer"){
                        //console.log(objetosgeo2);
                        objetosgeo2.push(objetosgeo[objetosgeo.length-1]);
                        objetosgeo.pop(); 
                        //console.log(objetosgeo2);
                    }
                    if(objetos[i].accion == "btnRehacer"){
                        objetosgeo.push(objetosgeo2[objetosgeo2.length-1]);
                        objetosgeo2.pop();
                    }
                    if(objetos[i].accion == "btnRestablecer"){
                        objetosgeo = [];
                        posEtiq = 0;
                    }
                    dibujar(objetos);
                    dibujar(objetosgeo);
                    break;
                }
            }
        }
        for(i=0;i<objetostemp.length;i++){
            if(objetostemp[i].tools == "True"){
                if( objetostemp[i].x < event.clientX 
                    && (objetostemp[i].width + objetostemp[i].x > event.clientX)
                    && objetostemp[i].y < event.clientY
                    && (objetostemp[i].height + objetostemp[i].y > event.clientY)){
                    //alert(objetostemp[i].accion);
                    //console.log(objetosgeo);
                    if(objetostemp[i].accion == "ChangeColor:amarillo"){
                        objetosgeo[pos].color = "yellow";
                        dibujar(objetos);
                        dibujar(objetosgeo);
                        objetostemp = [];
                        //objetoActual = null;
                    }
                    if(objetostemp[i].accion == "ChangeColor:naranja"){
                        objetosgeo[pos].color = "orange";
                        dibujar(objetos);
                        dibujar(objetosgeo);
                        objetostemp = [];
                        //objetoActual = null;
                    }
                    if(objetostemp[i].accion == "ChangeColor:rojo"){
                        objetosgeo[pos].color = "red";
                        dibujar(objetos);
                        dibujar(objetosgeo);
                        objetostemp = [];
                        //objetoActual = null;
                    }
                    if(objetostemp[i].accion == "ChangeColor:verde"){
                        objetosgeo[pos].color = "green";
                        dibujar(objetos);
                        dibujar(objetosgeo);
                        objetostemp = [];
                        //objetoActual = null;
                    }
                    if(objetostemp[i].accion == "ChangeColor:azul"){
                        objetosgeo[pos].color = "blue";
                        dibujar(objetos);
                        dibujar(objetosgeo);
                        objetostemp = [];
                        //objetoActual = null;
                    }
                    if(objetostemp[i].accion == "ChangeColor:cyan"){
                        //console.log(pos);
                        objetosgeo[pos].color = "cyan";
                        dibujar(objetos);
                        dibujar(objetosgeo);
                        objetostemp = [];
                        //objetoActual = null;
                    }

                }
            }
        }
    }
    cv.onmousedown = function(event){
        //console.log(event.which);
        /*if(event.which == "1"){
            objetostemp = [];
            dibujar(objetos);
            dibujar(objetosgeo);
            for(i=0; i<objetosgeo.length; i++){
                if(objetosgeo[i].geo == "V"){
                    if( objetosgeo[i].x < event.clientX 
                        && (objetosgeo[i].radio * 2 + objetosgeo[i].x > event.clientX)
                        && objetosgeo[i].y < event.clientY
                        && (objetosgeo[i].radio * 2 + objetosgeo[i].y > event.clientY)){
                        objetoestaico = new Object;
                        objetoestaico.color = '#000';
                        objetoestaico.type = "line";
                        objetoestaico.grosor = 5;
                        objetoestaico.tools = "False";
                        objetoestaico.geo = "A";
                        objetoestaico.x = objetosgeo[i].x;
                        objetoestaico.y = objetosgeo[i].y;
                        objetoActual = objetoestaico;
                        objetostemp.push(objetoActual);
                        break;
                    }
                }
            }
        }*/
        if(event.which == "3"){
            console.log(objetosgeo);
            objetostemp = [];
            objetostemp.push({
                x: event.clientX,
                y: event.clientY,
                width: 150,
                height: 150/6,
                color: '#fd9e8a',
                type: "Rectangulo",
                tools: "False",
            });
            objetostemp.push({
                x: event.clientX,
                y: event.clientY+(150/7),
                color: '#000',
                type: "Text",
                font: "15px Arial",
                text: "Eliminar Arista",
                tools: "True",
                accion: "delArista"
            });
            objetostemp.push({
                x: event.clientX,
                y: event.clientY+(150/7),
                width: 150,
                height: 150/6,
                color: 'yellow',
                type: "Rectangulo",
                tools: "True",
                accion: "ChangeColor:amarillo"
            });
            objetostemp.push({
                x: event.clientX,
                y: event.clientY+((150/7)*2),
                width: 150,
                height: 150/6,
                color: 'orange',
                type: "Rectangulo",
                tools: "True",
                accion: "ChangeColor:naranja"
            });
            objetostemp.push({
                x: event.clientX,
                y: event.clientY+((150/7)*3),
                width: 150,
                height: 150/6,
                color: 'red',
                type: "Rectangulo",
                tools: "True",
                accion: "ChangeColor:rojo"
            });
            objetostemp.push({
                x: event.clientX,
                y: event.clientY+((150/7)*4),
                width: 150,
                height: 150/6,
                color: 'green',
                type: "Rectangulo",
                tools: "True",
                accion: "ChangeColor:verde"
            });
            objetostemp.push({
                x: event.clientX,
                y: event.clientY+((150/7)*5),
                width: 150,
                height: 150/6,
                color: 'blue',
                type: "Rectangulo",
                tools: "True",
                accion: "ChangeColor:azul"
            });
            objetostemp.push({
                x: event.clientX,
                y: event.clientY+((150/7)*6),
                width: 150,
                height: 150/6,
                color: 'cyan',
                type: "Rectangulo",
                tools: "True",
                accion: "ChangeColor:cyan"
            });
            console.log(objetostemp);
            for(i=0; i<objetosgeo.length; i++){
                //console.log(i);
                //console.log(objetosgeo);
                if(objetosgeo[i].geo == "A"){
                    //console.log(i);
                    if( objetosgeo[i].puntomediox < event.clientX 
                        && (10 + objetosgeo[i].puntomediox > event.clientX)
                        && objetosgeo[i].puntomedioy < event.clientY
                        && (10 + objetosgeo[i].puntomedioy > event.clientY)){
                            //console.log(i);
                            pos = i;
                            console.log(pos);   
                            dibujar(objetos);
                            dibujar(objetosgeo);
                            dibujar(objetostemp);
                            break;
                    }
                    //console.log(objetosgeo[i]);
                    /*if(objetosgeo[i].x == objetosgeo[i].xf){
                        console.log(event.clientX + " - " + objetosgeo[i].x)
                        if(Math.abs(event.clientX-objetosgeo[i].x)<10){
                            dibujar(objetos);
                            dibujar(objetosgeo);
                            dibujar(objetostemp);
                            console.log("Arista");
                            break;
                        }
                    }else{
                        var R1 = 0, R2 = 0;
                        M = (objetosgeo[i].yf-objetosgeo[i].y)/(objetosgeo[i].xf-objetosgeo[i].x);
                        R1 = (event.clientY-objetosgeo[i].y)/(event.clientX-objetosgeo[i].x);
                        R2 = (objetosgeo[i].yf-objetosgeo[i].y)/(objetosgeo[i].xf-objetosgeo[i].x);
                        console.log(R1 +" - "+ R2);
                        console.log(event.clientX +" - "+ event.clientY);
                        console.log(M);
                        if(M<0){
                            R1 = (event.clientY - objetosgeo[i].y);
                            R2 = M*(event.clientX - objetosgeo[i].xf);
                            console.log(R1 +" - "+ R2);
                            if(Math.abs(R1+R2) < 10){
                                dibujar(objetos);
                                dibujar(objetosgeo);
                                dibujar(objetostemp);
                                alert("Arista");
                                break;
                            }
                        }else{
                            if(Math.abs(R1 - R2) < 0.5){
                                dibujar(objetos);
                                dibujar(objetosgeo);
                                dibujar(objetostemp);
                                alert("Arista");
                                break;
                            }
                        }*/
                        // console.log(event.clientX + "-" + event.clientY);
                        // console.log(R1 + "-" + R2);
                        // if(R1<0 && R2<0){
                        //     R1 *= -1;
                        //     console.log(R1);
                        //     T = R1 + R2;
                        //     console.log(T);
                        //     //T = 1-T;
                        //     //console.log(T);
                        //     if(T<0.5){
                        //         dibujar(objetos);
                        //         dibujar(objetosgeo);
                        //         dibujar(objetostemp);
                        //         console.log("Arista");
                        //     }
                        // }else{
                        //}
                    }
                }   
            document.oncontextmenu = menusecundario;
        }
    };
    cv.onmousemove = function(event){
        /*if(objetoActual!=null){
            objetoActual.xf = event.clientX;
            objetoActual.yf = event.clientY;
        }*/
        //dibujar(objetos);
        //dibujar(objetosgeo);
        //dibujar(objetostemp);
        //objetos[119].text = "X: " + event.clientX + 
        //                    " Y: " + event.clientY;
        //dibujar(objetos);
        //dibujar(objetosgeo);
    };
    cv.onmouseup = function(event){
        //alert("dsdsd");
        /*for(i=0; i<objetosgeo.length; i++){
            if(objetosgeo[i].geo == "V"){
                if( objetosgeo[i].x < event.clientX 
                    && (objetosgeo[i].radio * 2 + objetosgeo[i].x > event.clientX)
                    && objetosgeo[i].y < event.clientY
                    && (objetosgeo[i].radio * 2 + objetosgeo[i].y > event.clientY)){
                    objetoestaico.xf = objetosgeo[i].x;
                    objetoestaico.yf = objetosgeo[i].y;
                    objetosgeo.push(objetoestaico);
                    objetoActual = null;
                    objetostemp = [];
                    break;
                }
            }
        }*/
        /*var bandera = 1;
        for(i=0; i<objetos.length; i++){
            if(objetos[i].isDrop=="True"){
                if( objetos[i].x < event.clientX 
                    && (objetos[i].radio * 2 + objetos[i].x > event.clientX)
                    && objetos[i].y < event.clientY
                    && (objetos[i].radio * 2 + objetos[i].y > event.clientY)){
                    objetos.push(objetoestaico);
                    objetoestaico = null;
                    bandera = 0;
                    dibujar();
                    break;
                }
            }
        }
        if(bandera){
            objetoActual.color = objetoestaico.color;
            objetoActual.x = objetoestaico.x;
            objetoActual.y = objetoestaico.y;
            objetoActual.type = objetoestaico.type;
            objetoActual.radio = objetoestaico.radio;
            objetoActual.tools = objetoestaico.tools;
        }
        objetoActual = null;*/
    }
    $(window).resize(function(){
        navwidth = $(window).width() - 20;
        navheigth = $(window).height() - 20;
        cx.canvas.width = navwidth;
        cx.canvas.height = navheigth;
        cobjetos();
        dibujar(objetos);
        dibujar(objetosgeo);
    });
});